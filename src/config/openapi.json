{
  "openapi": "3.0.0",
  "info": {
    "title": "Poolside Challenge API",
    "description": "API to manage interview schedule availability and interview appointments",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Localhost development instance"
    }
  ],
  "paths": {
    "/availability/{availabilityId}": {
      "get": {
        "summary": "Returns an availability record by",
        "tags": [
          "Availability"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "availabilityId",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The Availability ID to retreive"
          }
        ],
        "responses": {
          "200": {
            "description": "The request availability object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityWithAppointment"
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request response when an availabilityId is not provided"
          },
          "404": {
            "description": "A Not Found response when the availability was not found by the availabilityId"
          }
        }
      }
    },
    "/availability": {
      "post": {
        "summary": "Creates an availability record",
        "tags": [
          "Availability"
        ],
        "requestBody": {
          "description": "The Availability request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/availability"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created availability object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availability"
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request when the request payload is not well formed"
          }
        }
      },
      "put": {
        "summary": "Replaces an availability record",
        "tags": [
          "Availability"
        ],
        "requestBody": {
          "description": "The Availability request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/availability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created availability object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availability"
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request when the request payload is not well formed"
          }
        }
      }
    },
    "/availability/byrange": {
      "get": {
        "summary": "Returns configured availability for a given month.",
        "tags": [
          "Availability"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startdate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The beginning date and time of the availability range."
          },
          {
            "in": "query",
            "name": "enddate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The end date and time of the availability range."
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of availability objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/availabilityWithAppointment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request response when either the startdate or enddate parameters are missing, or if the end date is not after the start date.."
          }
        }
      }
    },
    "/appointment/{appointmentId}": {
      "get": {
        "summary": "Returns an appointment record by the appointmentId",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The Appointment ID to retreive"
          }
        ],
        "responses": {
          "200": {
            "description": "The request availability object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityWithAppointment"
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request response when an availabilityId is not provided"
          },
          "404": {
            "description": "A Not Found response when the availability was not found by the availabilityId"
          }
        }
      }
    },
    "/appointment": {
      "post": {
        "summary": "Creates an appointment record",
        "tags": [
          "Appointment"
        ],
        "requestBody": {
          "description": "The Appointment request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/appointmentWithAvailability"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created appointment object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/appointmentWithAvailability"
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request when the request payload is not well formed"
          }
        }
      },
      "put": {
        "summary": "Replaces an appointment record",
        "tags": [
          "Appointment"
        ],
        "requestBody": {
          "description": "The Appointment request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/appointmentWithAvailability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated appointment record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/appointmentWithAvailability"
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request when the request payload is not well formed"
          }
        }
      }
    },
    "/availability/byemail/{email}": {
      "get": {
        "summary": "Any appointments matching the email.",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of availability objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/appointmentWithAvailability"
                  }
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request response when an email isn't provided."
          }
        }
      }
    },
    "/availability/byphone/{phone}": {
      "get": {
        "summary": "Any appointments matching the phone.",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "phone",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of availability objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/appointmentWithAvailability"
                  }
                }
              }
            }
          },
          "400": {
            "description": "A Bad Request response when an email isn't provided."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "availability": {
        "type": "object",
        "required": [
          "availabilityDate",
          "duration"
        ],
        "properties": {
          "availabilityId": {
            "type": "integer",
            "format": "int32"
          },
          "availabilityDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the start of the availability slot"
          },
          "duration": {
            "type": "number",
            "format": "int32",
            "description": "Duration of the availability slot in minutes."
          }
        }
      },
      "appointment": {
        "type": "object",
        "required": [
          "email",
          "phone"
        ],
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "availabilityWithAppointment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/availability"
          },
          {
            "type": "object",
            "properties": {
              "appointment": {
                "$ref": "#/components/schemas/appointment"
              }
            }
          }
        ]
      },
      "appointmentWithAvailability": {
        "allOf": [
          {
            "$ref": "#/components/schemas/appointment"
          },
          {
            "type": "object",
            "properties": {
              "availability": {
                "$ref": "#/components/schemas/availability"
              }
            }
          }
        ]
      }
    }
  }
}